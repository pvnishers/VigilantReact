{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MatheusBA\\\\Downloads\\\\vigilant-core\\\\src\\\\contexts\\\\AuthenticationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthenticationContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthenticationProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authorization/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => setCurrentUser(data)).catch(error => console.error(\"Erro ao validar o token\", error));\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authentication/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.Message);\n        localStorage.setItem('token', data.token);\n        setCurrentUser(data.fullName);\n      } else {\n        const data = await response.json();\n        console.error(data.Message);\n        throw new Error('Falha ao autenticar');\n      }\n    } catch (error) {\n      console.error(\"Erro ao fazer login\", error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      localStorage.removeItem('token');\n      setCurrentUser(null);\n    } catch (error) {\n      console.error(\"Erro ao fazer logout\", error);\n      throw error;\n    }\n  };\n  const register = async (username, password, fullName) => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authentication/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          fullName\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Registro bem-sucedido!\");\n        setCurrentUser(username);\n      } else {\n        const data = await response.json();\n        console.error(data);\n        throw new Error('Falha ao registrar');\n      }\n    } catch (error) {\n      console.error(\"Erro ao registrar\", error);\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthenticationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthenticationProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = AuthenticationProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthenticationContext","useAuth","_s","AuthenticationProvider","children","_s2","currentUser","setCurrentUser","token","localStorage","getItem","fetch","headers","then","response","json","data","catch","error","console","login","username","password","method","body","JSON","stringify","ok","log","Message","setItem","fullName","Error","logout","removeItem","register","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MatheusBA/Downloads/vigilant-core/src/contexts/AuthenticationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthenticationContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthenticationContext);\r\n};\r\n\r\nexport const AuthenticationProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authorization/me', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => setCurrentUser(data))\r\n            .catch(error => console.error(\"Erro ao validar o token\", error));\r\n        }\r\n    }, []);\r\n\r\n    const login = async (username, password) => {\r\n        try {\r\n            const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authentication/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data.Message);\r\n                localStorage.setItem('token', data.token);\r\n                setCurrentUser(data.fullName);\r\n            } else {\r\n                const data = await response.json();\r\n                console.error(data.Message);\r\n                throw new Error('Falha ao autenticar');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao fazer login\", error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            localStorage.removeItem('token');\r\n            setCurrentUser(null);\r\n        } catch (error) {\r\n            console.error(\"Erro ao fazer logout\", error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n\r\n    const register = async (username, password, fullName) => {\r\n        try {\r\n            const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authentication/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password, fullName }),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(\"Registro bem-sucedido!\");\r\n                setCurrentUser(username); \r\n            } else {\r\n                const data = await response.json();\r\n                console.error(data);\r\n                throw new Error('Falha ao registrar');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao registrar\", error);\r\n            throw error;\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        logout,\r\n        register,\r\n    };\r\n\r\n    return (\r\n        <AuthenticationContext.Provider value={value}>\r\n            {children}\r\n        </AuthenticationContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}