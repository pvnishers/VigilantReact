{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MatheusBA\\\\Downloads\\\\vigilant-core\\\\src\\\\contexts\\\\AuthenticationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthenticationContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthenticationProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const login = async (username, password) => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authentication/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.Message);\n        setCurrentUser(data.fullName);\n      } else {\n        const data = await response.json();\n        console.error(data.Message);\n        throw new Error('Falha ao autenticar');\n      }\n    } catch (error) {\n      console.error(\"Erro ao fazer login\", error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authentication/logout', {\n        method: 'POST'\n      });\n      if (response.ok) {\n        setCurrentUser(null);\n      } else {\n        throw new Error('Falha ao deslogar');\n      }\n    } catch (error) {\n      console.error(\"Erro ao fazer logout\", error);\n      throw error;\n    }\n  };\n  const register = async (username, password, fullName) => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authentication/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          fullName\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Registro bem-sucedido!\");\n        setCurrentUser(username);\n      } else {\n        const data = await response.json();\n        console.error(data);\n        throw new Error('Falha ao registrar');\n      }\n    } catch (error) {\n      console.error(\"Erro ao registrar\", error);\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthenticationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthenticationProvider, \"D3+eUn/eYbOcEwoCOjOk5Grmif4=\");\n_c = AuthenticationProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthenticationContext","useAuth","_s","AuthenticationProvider","children","_s2","currentUser","setCurrentUser","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","Message","fullName","error","Error","logout","register","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MatheusBA/Downloads/vigilant-core/src/contexts/AuthenticationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthenticationContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthenticationContext);\r\n};\r\n\r\nexport const AuthenticationProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    const login = async (username, password) => {\r\n        try {\r\n            const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authentication/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data.Message);\r\n                setCurrentUser(data.fullName);\r\n            } else {\r\n                const data = await response.json();\r\n                console.error(data.Message);\r\n                throw new Error('Falha ao autenticar');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao fazer login\", error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authentication/logout', {\r\n                method: 'POST',\r\n            });\r\n    \r\n            if (response.ok) {\r\n                setCurrentUser(null);\r\n            } else {\r\n                throw new Error('Falha ao deslogar');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao fazer logout\", error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (username, password, fullName) => {\r\n        try {\r\n            const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/authentication/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password, fullName }),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(\"Registro bem-sucedido!\");\r\n                setCurrentUser(username); \r\n            } else {\r\n                const data = await response.json();\r\n                console.error(data);\r\n                throw new Error('Falha ao registrar');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao registrar\", error);\r\n            throw error;\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        logout,\r\n        register,\r\n    };\r\n\r\n    return (\r\n        <AuthenticationContext.Provider value={value}>\r\n            {children}\r\n        </AuthenticationContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}