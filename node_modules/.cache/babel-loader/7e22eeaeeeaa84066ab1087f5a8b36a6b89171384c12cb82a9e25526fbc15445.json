{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MatheusBA\\\\Downloads\\\\vigilant-core\\\\src\\\\contexts\\\\AuthenticationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthenticationContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthenticationProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/me', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => {\n        if (!response.ok && response.status === 401) {\n          console.error(\"Token inválido ou expirado\");\n          localStorage.removeItem('token');\n        } else {\n          return response.json();\n        }\n      }).then(data => setCurrentUser({\n        fullName: data.fullName,\n        token\n      })).catch(error => console.error(\"Erro ao validar o token\", error));\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/Login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.Message);\n        localStorage.setItem('token', data.token);\n        setCurrentUser({\n          fullName: data.fullName,\n          token: data.token\n        });\n      } else {\n        const data = await response.json();\n        console.error(data.Message);\n        throw new Error(data.Message);\n      }\n    } catch (error) {\n      console.error(\"Erro ao fazer login\", error);\n      throw error;\n    }\n  };\n  const adminLogin = async (username, password) => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/AdminLogin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.Message);\n        localStorage.setItem('token', data.token);\n        setCurrentUser({\n          fullName: data.fullName,\n          token: data.token,\n          isAdmin: true\n        });\n      } else {\n        const data = await response.json();\n        console.error(data.Message);\n        throw new Error(data.Message);\n      }\n    } catch (error) {\n      console.error(\"Erro ao fazer login como administrador\", error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      localStorage.removeItem('token');\n      setCurrentUser(null);\n    } catch (error) {\n      console.error(\"Erro ao fazer logout\", error);\n      throw error;\n    }\n  };\n  const register = async (username, password, fullName) => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/Register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          fullName\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Registro bem-sucedido!\");\n        setCurrentUser(username);\n      } else {\n        const data = await response.json();\n        console.error(data.errormessage);\n        throw new Error(data.message);\n      }\n    } catch (error) {\n      console.error(\"Erro ao registrar\", error);\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    adminLogin,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthenticationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthenticationProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = AuthenticationProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthenticationContext","useAuth","_s","AuthenticationProvider","children","_s2","currentUser","setCurrentUser","token","localStorage","getItem","fetch","headers","then","response","ok","status","console","error","removeItem","json","data","fullName","catch","login","username","password","method","body","JSON","stringify","log","Message","setItem","Error","adminLogin","isAdmin","logout","register","errormessage","message","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MatheusBA/Downloads/vigilant-core/src/contexts/AuthenticationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthenticationContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthenticationContext);\r\n};\r\n\r\nexport const AuthenticationProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/me', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            })\r\n            .then(response => {\r\n                if (!response.ok && response.status === 401) {\r\n                    console.error(\"Token inválido ou expirado\");\r\n                    localStorage.removeItem('token');\r\n                } else {\r\n                    return response.json();\r\n                }\r\n            })\r\n            .then(data => setCurrentUser({ fullName: data.fullName, token }))\r\n            .catch(error => console.error(\"Erro ao validar o token\", error));\r\n        }\r\n    }, []);\r\n    \r\n    const login = async (username, password) => {\r\n        try {\r\n            const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/Login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data.Message);\r\n                localStorage.setItem('token', data.token);\r\n                setCurrentUser({ fullName: data.fullName, token: data.token });\r\n            } else {\r\n                const data = await response.json();\r\n                console.error(data.Message);\r\n                throw new Error(data.Message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao fazer login\", error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const adminLogin = async (username, password) => {\r\n        try {\r\n            const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/AdminLogin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data.Message);\r\n                localStorage.setItem('token', data.token);\r\n                setCurrentUser({ fullName: data.fullName, token: data.token, isAdmin: true });\r\n            } else {\r\n                const data = await response.json();\r\n                console.error(data.Message);\r\n                throw new Error(data.Message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao fazer login como administrador\", error);\r\n            throw error;\r\n        }\r\n    };\r\n    \r\n\r\n    const logout = async () => {\r\n        try {\r\n            localStorage.removeItem('token');\r\n            setCurrentUser(null);\r\n        } catch (error) {\r\n            console.error(\"Erro ao fazer logout\", error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n\r\n    const register = async (username, password, fullName) => {\r\n        try {\r\n            const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/Register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password, fullName }),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(\"Registro bem-sucedido!\");\r\n                setCurrentUser(username); \r\n            } else {\r\n                const data = await response.json();\r\n                console.error(data.errormessage);\r\n                throw new Error(data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao registrar\", error);\r\n            throw error;\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        adminLogin,\r\n        logout,\r\n        register,\r\n    };\r\n\r\n    return (\r\n        <AuthenticationContext.Provider value={value}>\r\n            {children}\r\n        </AuthenticationContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}