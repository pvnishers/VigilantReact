{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vigilant-core-front\\\\src\\\\contexts\\\\AuthenticationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthenticationContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthenticationProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Realize uma verificação adicional do token no servidor, se necessário.\n      // Em caso afirmativo, atualize o estado do currentUser aqui.\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/Login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'withCredentials': true\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const setCookieHeader = response.headers.get('Set-Cookie');\n        const server = response.headers.get('Server');\n        if (setCookieHeader) {\n          document.cookie = setCookieHeader;\n          localStorage.setItem('cookie', setCookieHeader);\n        }\n        const data = await response.json();\n        console.log(data.Message);\n        localStorage.setItem('token', data.token);\n        setCurrentUser({\n          fullName: data.name,\n          token: data.token\n        });\n        console.log(currentUser);\n      } else {\n        const data = await response.json();\n        console.error(data.message);\n        throw new Error(data.message);\n      }\n    } catch (error) {\n      console.error(\"Erro ao fazer login\", error);\n      throw error;\n    }\n  };\n  const adminLogin = async (username, password) => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/AdminLogin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.Message);\n        localStorage.setItem('token', data.token);\n        setCurrentUser({\n          fullName: data.fullName,\n          token: data.token,\n          isAdmin: true\n        });\n      } else {\n        const data = await response.json();\n        console.error(data.message);\n        throw new Error(data.message);\n      }\n    } catch (error) {\n      console.error(\"Erro ao fazer login como administrador\", error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      localStorage.removeItem('token');\n      setCurrentUser(null);\n    } catch (error) {\n      console.error(\"Erro ao fazer logout\", error);\n      throw error;\n    }\n  };\n  const register = async (username, password, fullName) => {\n    try {\n      const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/Register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          fullName\n        })\n      });\n      if (response.ok) {\n        console.log(\"Registro bem-sucedido!\");\n        setCurrentUser(username);\n      } else {\n        const data = await response.json();\n        console.error(data.errors);\n        throw data.errors;\n      }\n    } catch (error) {\n      console.error(\"Erro ao registrar\", error);\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    adminLogin,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthenticationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthenticationProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = AuthenticationProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthenticationContext","useAuth","_s","AuthenticationProvider","children","_s2","currentUser","setCurrentUser","token","localStorage","getItem","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","setCookieHeader","get","server","document","cookie","setItem","data","json","console","log","Message","fullName","name","error","message","Error","adminLogin","isAdmin","logout","removeItem","register","errors","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mathe/OneDrive/Documentos/vigilant-core-front/src/contexts/AuthenticationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthenticationContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthenticationContext);\r\n};\r\n\r\nexport const AuthenticationProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            // Realize uma verificação adicional do token no servidor, se necessário.\r\n            // Em caso afirmativo, atualize o estado do currentUser aqui.\r\n        }\r\n    }, []);\r\n\r\n    const login = async (username, password) => {\r\n        try {\r\n          const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/Login', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'withCredentials': true\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n          });\r\n      \r\n          if (response.ok) {\r\n            const setCookieHeader = response.headers.get('Set-Cookie');\r\n            const server = response.headers.get('Server');\r\n            \r\n            if (setCookieHeader) {\r\n              document.cookie = setCookieHeader;\r\n              localStorage.setItem('cookie', setCookieHeader);\r\n            }\r\n            \r\n            const data = await response.json();\r\n            console.log(data.Message);\r\n      \r\n            localStorage.setItem('token', data.token);\r\n      \r\n            setCurrentUser({ fullName: data.name, token: data.token });\r\n            console.log(currentUser);\r\n          } else {\r\n            const data = await response.json();\r\n            console.error(data.message);\r\n            throw new Error(data.message);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erro ao fazer login\", error);\r\n          throw error;\r\n        }\r\n      };\r\n      \r\n\r\n    const adminLogin = async (username, password) => {\r\n        try {\r\n            const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/AdminLogin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data.Message);\r\n                localStorage.setItem('token', data.token);\r\n                setCurrentUser({ fullName: data.fullName, token: data.token, isAdmin: true });\r\n            } else {\r\n                const data = await response.json();\r\n                console.error(data.message);\r\n                throw new Error(data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao fazer login como administrador\", error);\r\n            throw error;\r\n        }\r\n    };\r\n    \r\n\r\n    const logout = async () => {\r\n        try {\r\n            localStorage.removeItem('token');\r\n            setCurrentUser(null);\r\n        } catch (error) {\r\n            console.error(\"Erro ao fazer logout\", error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n\r\n    const register = async (username, password, fullName) => {\r\n        try {\r\n            const response = await fetch('https://vigilant-api-a2xyukeyka-uc.a.run.app/Account/Register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password, fullName }),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                console.log(\"Registro bem-sucedido!\");\r\n                setCurrentUser(username); \r\n            } else {\r\n                const data = await response.json();\r\n                console.error(data.errors);\r\n                throw data.errors;\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro ao registrar\", error);\r\n            throw error;\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        adminLogin,\r\n        logout,\r\n        register,\r\n    };\r\n\r\n    return (\r\n        <AuthenticationContext.Provider value={value}>\r\n            {children}\r\n        </AuthenticationContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}