{"ast":null,"code":"\"use strict\";\n\nconst codes = require(\"./codes.json\");\nconst supportedLocales = require(\"./supportedLocales.json\");\nconst removeDiacritics = require(\"diacritics\").remove;\nconst registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nconst alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\ncodes.forEach(function (codeInformation) {\n  const s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\n/**\n * @private\n * @param {number} code\n */\nfunction formatNumericCode(code) {\n  return String(\"000\" + (code ? code : \"\")).slice(-3);\n}\n\n/**\n * @private\n * Avoid using obj.hasOwnProperty directly as `hasOwnProperty` could be a\n * property in itself ({ hasOwnProperty: 1 }) and cause weird bugs\n * https://eslint.org/docs/rules/no-prototype-builtins\n */\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * @private\n * Pass localeList through a filter and return a newLocaleList obj\n * with the same structure of the old localeList.\n *\n * @param {LocalizedCountryNames} localeList  Local List in raw\n * @param {Function} filter    callback to set filter rule\n * @return {String | String[]} new filtered Local List\n */\nfunction localeFilter(localeList, filter) {\n  return Object.keys(localeList).reduce(function (newLocaleList, alpha2) {\n    const nameList = localeList[alpha2];\n    newLocaleList[alpha2] = filter(nameList, alpha2);\n    return newLocaleList;\n  }, {});\n}\n\n/**\n * @private\n * Preserve for getName & getNames\n *\n * @param {GetNameOptions.select} type all | official | alias\n * @param countryNameList  string array of country's\n *                         official name and alias\n * @return {String | String[]} of a country name\n */\nfunction filterNameBy(type, countryNameList) {\n  switch (type) {\n    case \"official\":\n      return Array.isArray(countryNameList) ? countryNameList[0] : countryNameList;\n    case \"all\":\n      return typeof countryNameList === \"string\" ? [countryNameList] : countryNameList;\n    case \"alias\":\n      return Array.isArray(countryNameList) ? countryNameList[1] || countryNameList[0] : countryNameList;\n    default:\n      throw new TypeError(\"LocaleNameType must be one of these: all, official, alias!\");\n  }\n}\n\n/**\n * Register countries in browsers' environment:\n * @param {object} localeData\n * @example countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n * @return void\n */\nexports.registerLocale = function (localeData) {\n  if (!localeData.locale) {\n    throw new TypeError(\"Missing localeData.locale\");\n  }\n  if (!localeData.countries) {\n    throw new TypeError(\"Missing localeData.countries\");\n  }\n  registeredLocales[localeData.locale] = localeData.countries;\n};\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  const padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  const padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if (code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if (code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/**\n * @param {string | number | Alpha2Code | Alpha3Code} code\n * @param {String} lang          language for country name\n * @param {GetNameOptions} options\n * @return {String | String[] | undefined}  name\n */\nexports.getName = function (code, lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  try {\n    const codeMaps = registeredLocales[lang.toLowerCase()];\n    const nameList = codeMaps[toAlpha2(code)];\n    return filterNameBy(options.select, nameList);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/**\n * @param {String} lang             language for country names\n * @param {GetNameOptions} options   getNames Options\n * @return {LocalizedCountryNames}  country code\n *                                  mapped to county name\n */\nexports.getNames = function (lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  const localeList = registeredLocales[lang.toLowerCase()];\n  if (localeList === undefined) return {};\n  return localeFilter(localeList, function (nameList) {\n    return filterNameBy(options.select, nameList);\n  });\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function (name, lang) {\n  const normalizeString = string => string.toLowerCase();\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getSimpleAlpha2Code = function (name, lang) {\n  const normalizeString = string => removeDiacritics(string.toLowerCase());\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function () {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getSimpleAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getSimpleAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function () {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function () {\n  return numeric;\n};\n\n/*\n * @return Array of registered languages\n */\nexports.langs = function () {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @return Array of supported languages\n */\nexports.getSupportedLanguages = function () {\n  return supportedLocales;\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function (code) {\n  if (!code) {\n    return false;\n  }\n  const coerced = code.toString().toUpperCase();\n  return hasOwnProperty(alpha3, coerced) || hasOwnProperty(alpha2, coerced) || hasOwnProperty(numeric, coerced);\n};","map":{"version":3,"names":["codes","require","supportedLocales","removeDiacritics","remove","registeredLocales","alpha2","alpha3","numeric","invertedNumeric","forEach","codeInformation","s","formatNumericCode","code","String","slice","hasOwnProperty","object","property","Object","prototype","call","localeFilter","localeList","filter","keys","reduce","newLocaleList","nameList","filterNameBy","type","countryNameList","Array","isArray","TypeError","exports","registerLocale","localeData","locale","countries","alpha3ToAlpha2","alpha2ToAlpha3","alpha3ToNumeric","alpha2ToNumeric","numericToAlpha3","padded","numericToAlpha2","toAlpha3","test","length","toUpperCase","undefined","toAlpha2","getName","lang","options","select","codeMaps","toLowerCase","err","getNames","getAlpha2Code","name","normalizeString","string","areSimilar","a","b","codenames","p","mappedName","getSimpleAlpha2Code","getAlpha2Codes","getAlpha3Code","getSimpleAlpha3Code","getAlpha3Codes","getNumericCodes","langs","getSupportedLanguages","isValid","coerced","toString"],"sources":["C:/Users/MatheusBA/Downloads/vigilant-core/node_modules/i18n-iso-countries/index.js"],"sourcesContent":["\"use strict\";\n\nconst codes = require(\"./codes.json\");\nconst supportedLocales = require(\"./supportedLocales.json\");\nconst removeDiacritics = require(\"diacritics\").remove;\nconst registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nconst alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(function (codeInformation) {\n  const s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\n/**\n * @private\n * @param {number} code\n */\nfunction formatNumericCode(code) {\n  return String(\"000\" + (code ? code : \"\")).slice(-3);\n}\n\n/**\n * @private\n * Avoid using obj.hasOwnProperty directly as `hasOwnProperty` could be a\n * property in itself ({ hasOwnProperty: 1 }) and cause weird bugs\n * https://eslint.org/docs/rules/no-prototype-builtins\n */\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * @private\n * Pass localeList through a filter and return a newLocaleList obj\n * with the same structure of the old localeList.\n *\n * @param {LocalizedCountryNames} localeList  Local List in raw\n * @param {Function} filter    callback to set filter rule\n * @return {String | String[]} new filtered Local List\n */\nfunction localeFilter(localeList, filter) {\n  return Object.keys(localeList).reduce(function (newLocaleList, alpha2) {\n    const nameList = localeList[alpha2];\n    newLocaleList[alpha2] = filter(nameList, alpha2);\n    return newLocaleList;\n  }, {});\n}\n\n/**\n * @private\n * Preserve for getName & getNames\n *\n * @param {GetNameOptions.select} type all | official | alias\n * @param countryNameList  string array of country's\n *                         official name and alias\n * @return {String | String[]} of a country name\n */\nfunction filterNameBy(type, countryNameList) {\n  switch (type) {\n    case \"official\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[0]\n        : countryNameList;\n\n    case \"all\":\n      return typeof countryNameList === \"string\"\n        ? [countryNameList]\n        : countryNameList;\n\n    case \"alias\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[1] || countryNameList[0]\n        : countryNameList;\n\n    default:\n      throw new TypeError(\n        \"LocaleNameType must be one of these: all, official, alias!\"\n      );\n  }\n}\n\n/**\n * Register countries in browsers' environment:\n * @param {object} localeData\n * @example countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n * @return void\n */\nexports.registerLocale = function (localeData) {\n  if (!localeData.locale) {\n    throw new TypeError(\"Missing localeData.locale\");\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError(\"Missing localeData.countries\");\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n};\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  const padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  const padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if (code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if (code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/**\n * @param {string | number | Alpha2Code | Alpha3Code} code\n * @param {String} lang          language for country name\n * @param {GetNameOptions} options\n * @return {String | String[] | undefined}  name\n */\nexports.getName = function (code, lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  try {\n    const codeMaps = registeredLocales[lang.toLowerCase()];\n    const nameList = codeMaps[toAlpha2(code)];\n    return filterNameBy(options.select, nameList);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/**\n * @param {String} lang             language for country names\n * @param {GetNameOptions} options   getNames Options\n * @return {LocalizedCountryNames}  country code\n *                                  mapped to county name\n */\nexports.getNames = function (lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  const localeList = registeredLocales[lang.toLowerCase()];\n  if (localeList === undefined) return {};\n  return localeFilter(localeList, function (nameList) {\n    return filterNameBy(options.select, nameList);\n  });\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => string.toLowerCase();\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getSimpleAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => removeDiacritics(string.toLowerCase());\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function () {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getSimpleAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getSimpleAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function () {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function () {\n  return numeric;\n};\n\n/*\n * @return Array of registered languages\n */\nexports.langs = function () {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @return Array of supported languages\n */\nexports.getSupportedLanguages = function () {\n  return supportedLocales;\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function (code) {\n  if (!code) {\n    return false;\n  }\n\n  const coerced = code.toString().toUpperCase();\n  return (\n    hasOwnProperty(alpha3, coerced) ||\n    hasOwnProperty(alpha2, coerced) ||\n    hasOwnProperty(numeric, coerced)\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}